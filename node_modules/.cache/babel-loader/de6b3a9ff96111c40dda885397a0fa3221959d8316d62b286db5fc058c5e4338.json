{"ast":null,"code":"// import { createContext, useLayoutEffect, useState } from \"react\";\n// export const AppContext = createContext(null);\n\n// export default function ContextProvider(props){\n\n//   const [counter,setCounter] = useState(99);\n//   const [showEditStudents,setShowStudentEdits] = useState(false)\n//   const [currentEditItems,setCurrentEdits] = useState({})\n\n//   const [student_ar,setStudentAr] = useState([\n//     {name:\"Moshe\",grade:40,id:1},\n//     {name:\"Avi\",grade:92,id:2},\n//     {name:\"Anonimus\",grade:60,id:3},\n//   ]);\n//   // useEffect - כמו יוז אפקט אבל פועל לפני הרנדור של הקומפונינטה\n//   useLayoutEffect(() => {\n//     // בודקים אם יש מידע שנשמר בלוקאל ואם כן נחזיר אותו למערך\n//     if(localStorage.getItem(\"student_ar\")){\n//       setStudentAr(JSON.parse(localStorage.getItem(\"student_ar\")))\n//     }\n//   },[])\n\n//   const addStudent = (newItem) => {\n//     setStudentAr([...student_ar,newItem]);\n//       // stringify - מכיוון שאנחנו רוצים לשמור ג'ייסון ולוקאל יודע\n//     // לעבוד רק עם סטרינג אנחנו חייבים להמיר אותו לסטרינג\n//     localStorage.setItem(\"student_ar\",JSON.stringify([...student_ar,newItem]))\n//   }\n\n//   const resetAllStudent = () => {\n//     setStudentAr([]);\n//     localStorage.setItem(\"student_ar\",JSON.stringify([]))\n\n//   }\n\n//   const deleteStudent = (del_id) => {\n//     const filter_ar = student_ar.filter(item => item.id != del_id)\n//     setStudentAr(filter_ar);\n//     localStorage.setItem(\"student_ar\",JSON.stringify(filter_ar))\n//   }\n\n//   const updateStudent = (updateStudent) => {\n//     const map_ar = student_ar.map((item) => {\n//       if(item.id == updateStudent.id){\n//         item = updateStudent\n//       }\n//       return item;\n//     }) \n//     setStudentAr(map_ar)\n//     localStorage.setItem(\"student_ar\",JSON.stringify(map_ar))\n//   }\n\n//   const globalValue = {\n//     counter,setCounter,\n//     student_ar,addStudent,resetAllStudent,deleteStudent,\n//     showEditStudents,setShowStudentEdits,currentEditItems,setCurrentEdits,updateStudent\n// }\n//     // Value - כל מה שיהיה מהמאפיין שנעביר לווליו\n//   // יהפוך להיות גלובלי לכל הקומפנינטת ש\n//   // APPCONTEXT PROVIDER עוטף\n//   return (\n//     <AppContext.Provider value={globalValue} >\n//       {props.children}\n//     </AppContext.Provider>\n//   )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Shaked/Documents/מסמכים כללים - שקד/לימודים במכללות/לימודים אריאל/שנה ג/סמסטר ב/react/ReactLessons/src/context/StudentContext.js"],"sourcesContent":["// import { createContext, useLayoutEffect, useState } from \"react\";\r\n// export const AppContext = createContext(null);\r\n\r\n// export default function ContextProvider(props){\r\n\r\n//   const [counter,setCounter] = useState(99);\r\n//   const [showEditStudents,setShowStudentEdits] = useState(false)\r\n//   const [currentEditItems,setCurrentEdits] = useState({})\r\n\r\n//   const [student_ar,setStudentAr] = useState([\r\n//     {name:\"Moshe\",grade:40,id:1},\r\n//     {name:\"Avi\",grade:92,id:2},\r\n//     {name:\"Anonimus\",grade:60,id:3},\r\n//   ]);\r\n//   // useEffect - כמו יוז אפקט אבל פועל לפני הרנדור של הקומפונינטה\r\n//   useLayoutEffect(() => {\r\n//     // בודקים אם יש מידע שנשמר בלוקאל ואם כן נחזיר אותו למערך\r\n//     if(localStorage.getItem(\"student_ar\")){\r\n//       setStudentAr(JSON.parse(localStorage.getItem(\"student_ar\")))\r\n//     }\r\n//   },[])\r\n\r\n//   const addStudent = (newItem) => {\r\n//     setStudentAr([...student_ar,newItem]);\r\n//       // stringify - מכיוון שאנחנו רוצים לשמור ג'ייסון ולוקאל יודע\r\n//     // לעבוד רק עם סטרינג אנחנו חייבים להמיר אותו לסטרינג\r\n//     localStorage.setItem(\"student_ar\",JSON.stringify([...student_ar,newItem]))\r\n//   }\r\n\r\n//   const resetAllStudent = () => {\r\n//     setStudentAr([]);\r\n//     localStorage.setItem(\"student_ar\",JSON.stringify([]))\r\n\r\n//   }\r\n\r\n \r\n//   const deleteStudent = (del_id) => {\r\n//     const filter_ar = student_ar.filter(item => item.id != del_id)\r\n//     setStudentAr(filter_ar);\r\n//     localStorage.setItem(\"student_ar\",JSON.stringify(filter_ar))\r\n//   }\r\n  \r\n//   const updateStudent = (updateStudent) => {\r\n//     const map_ar = student_ar.map((item) => {\r\n//       if(item.id == updateStudent.id){\r\n//         item = updateStudent\r\n//       }\r\n//       return item;\r\n//     }) \r\n//     setStudentAr(map_ar)\r\n//     localStorage.setItem(\"student_ar\",JSON.stringify(map_ar))\r\n//   }\r\n\r\n//   const globalValue = {\r\n//     counter,setCounter,\r\n//     student_ar,addStudent,resetAllStudent,deleteStudent,\r\n//     showEditStudents,setShowStudentEdits,currentEditItems,setCurrentEdits,updateStudent\r\n// }\r\n//     // Value - כל מה שיהיה מהמאפיין שנעביר לווליו\r\n//   // יהפוך להיות גלובלי לכל הקומפנינטת ש\r\n//   // APPCONTEXT PROVIDER עוטף\r\n//   return (\r\n//     <AppContext.Provider value={globalValue} >\r\n//       {props.children}\r\n//     </AppContext.Provider>\r\n//   )\r\n// }"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}